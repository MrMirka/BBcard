{"ast":null,"code":"var _jsxFileName = \"/Users/fredgan/Documents/Projects/BetBoom/BBCard/src/CardBox/CardBox.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\nimport './CardBox.css';\nimport React, { useEffect, useState } from 'react';\nimport { CardBoxInstance } from './instance/CardBoxInstance';\n\n/**\n * cover\n * изображение должно быть растровое,\n * размер 204x304 без закруглений углов\n * желательно в размере x2(для ретины)\n *\n * onStateChange\n * тут все понятно, в App.tsx описаны все состояния\n * нулевое, конечно, не стриггерит никогда\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CardBox = ({\n  cover,\n  onStateChange\n}) => {\n  _s();\n  const [canvas, setCanvas] = useState(null);\n  const [instance, setInstance] = useState();\n  useEffect(() => {\n    if (!canvas) return;\n    if (!cover) throw new Error('Пацантре, ссыль на обложку карточки должна быть сразу');\n    const inst = new CardBoxInstance(canvas, cover);\n    setInstance(inst);\n    return () => {\n      inst.destroy();\n    };\n  }, [canvas]);\n  useEffect(() => {\n    if (instance) instance.onStateChange = onStateChange;\n  }, [instance, onStateChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-box\",\n    ref: setCanvas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n_s(CardBox, \"Z74ObPqtFaRE+2vtWieKqSY3NtQ=\");\n_c = CardBox;\nvar _c;\n$RefreshReg$(_c, \"CardBox\");","map":{"version":3,"names":["React","useEffect","useState","CardBoxInstance","jsxDEV","_jsxDEV","CardBox","cover","onStateChange","_s","canvas","setCanvas","instance","setInstance","Error","inst","destroy","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fredgan/Documents/Projects/BetBoom/BBCard/src/CardBox/CardBox.tsx"],"sourcesContent":["/* eslint-disable */\nimport './CardBox.css';\nimport React, {useEffect, useState} from 'react';\nimport {EventHandler, CardBoxInstance} from './instance/CardBoxInstance';\n\n\n/**\n * cover\n * изображение должно быть растровое,\n * размер 204x304 без закруглений углов\n * желательно в размере x2(для ретины)\n *\n * onStateChange\n * тут все понятно, в App.tsx описаны все состояния\n * нулевое, конечно, не стриггерит никогда\n */\nexport type Props = {\n  cover?: string;\n  onStateChange?: EventHandler;\n}\n\n\nexport const CardBox = ({cover, onStateChange}: Props) => {\n  const [canvas, setCanvas] = useState<HTMLDivElement | null>(null);\n  const [instance, setInstance] = useState<CardBoxInstance>();\n\n  useEffect(() => {\n    if (!canvas) return;\n    if (!cover) throw new Error('Пацантре, ссыль на обложку карточки должна быть сразу');\n    const inst = new CardBoxInstance(canvas, cover);\n    setInstance(inst);\n\n    return () => {\n      inst.destroy();\n    }\n  }, [canvas]);\n\n  useEffect(() => {\n    if (instance) instance.onStateChange = onStateChange;\n  }, [instance, onStateChange]);\n\n  return <div className='card-box' ref={setCanvas}/>\n}"],"mappings":";;AAAA;AACA,OAAO,eAAe;AACtB,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAsBC,eAAe,QAAO,4BAA4B;;AAGxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAgBA,OAAO,MAAMC,OAAO,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAwB,IAAI,CAAC;EACjE,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAkB,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,MAAM,EAAE;IACb,IAAI,CAACH,KAAK,EAAE,MAAM,IAAIO,KAAK,CAAC,uDAAuD,CAAC;IACpF,MAAMC,IAAI,GAAG,IAAIZ,eAAe,CAACO,MAAM,EAAEH,KAAK,CAAC;IAC/CM,WAAW,CAACE,IAAI,CAAC;IAEjB,OAAO,MAAM;MACXA,IAAI,CAACC,OAAO,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZT,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,EAAEA,QAAQ,CAACJ,aAAa,GAAGA,aAAa;EACtD,CAAC,EAAE,CAACI,QAAQ,EAAEJ,aAAa,CAAC,CAAC;EAE7B,oBAAOH,OAAA;IAAKY,SAAS,EAAC,UAAU;IAACC,GAAG,EAAEP;EAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACpD,CAAC;AAAAb,EAAA,CApBYH,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}