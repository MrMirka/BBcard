{"ast":null,"code":"import React,{useState}from'react';import'./App.css';import{CardBox}from'../CardBox/CardBox';import{TestScreen}from'../TestScreen/TestScreen';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const cards=['./card-0.jpg','./card-1.jpg','./card-0.jpg','./card-1.jpg'];function App(){const[visible,setVisible]=useState(true);const[active,setActive]=useState(false);const[num]=useState(Math.floor(cards.length*Math.random()));const cover=cards[num];const onStateChange=state=>{let consoleText='Нет такого стейта';switch(state){case 0:{consoleText='Ничего не начато, ничего не загружено';break;}case 1:{consoleText='Все загружено, стартует анимация';break;}case 2:{consoleText='Стартовая анимация закончилась, ждем отрыва(туц-туц-туц)';break;}case 3:{consoleText='Отрыв произошел';break;}case 4:{consoleText='Анимация окончания началась, можно показывать 2D';setActive(true);break;}case 5:{consoleText='Анимация окончания закончилась, можно вырубать';setVisible(false);break;}}console.log(consoleText);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[visible&&/*#__PURE__*/_jsx(CardBox,{cover:cover,onStateChange:onStateChange}),/*#__PURE__*/_jsx(TestScreen,{active:active,num:num})]});}export default App;","map":{"version":3,"names":["React","useState","CardBox","TestScreen","jsx","_jsx","jsxs","_jsxs","cards","App","visible","setVisible","active","setActive","num","Math","floor","length","random","cover","onStateChange","state","consoleText","console","log","className","children"],"sources":["/Users/fredgan/Documents/Projects/BetBoom/BBCard/src/App/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {CardBox} from '../CardBox/CardBox';\nimport {CardInstanceState} from '../CardBox/instance/CardBoxInstance';\nimport {TestScreen} from '../TestScreen/TestScreen';\n\nconst cards = ['./card-0.jpg', './card-1.jpg', './card-0.jpg', './card-1.jpg'];\n\nfunction App() {\n  const [visible, setVisible] = useState(true);\n  const [active, setActive] = useState(false);\n  const [num] = useState(Math.floor(cards.length * Math.random()));\n  const cover = cards[num];\n\n  const onStateChange = (state: CardInstanceState) => {\n    let consoleText = 'Нет такого стейта';\n    switch (state) {\n      case 0: {\n        consoleText = 'Ничего не начато, ничего не загружено';\n        break;\n      }\n      case 1: {\n        consoleText = 'Все загружено, стартует анимация';\n        break;\n      }\n      case 2: {\n        consoleText = 'Стартовая анимация закончилась, ждем отрыва(туц-туц-туц)';\n        break;\n      }\n      case 3: {\n        consoleText = 'Отрыв произошел';\n        break;\n      }\n      case 4: {\n        consoleText = 'Анимация окончания началась, можно показывать 2D';\n        setActive(true);\n        break;\n      }\n      case 5: {\n        consoleText = 'Анимация окончания закончилась, можно вырубать';\n        setVisible(false);\n        break;\n      }\n    }\n    console.log(consoleText);\n  }\n\n  return (\n    <div className=\"App\">\n      {visible && <CardBox cover={cover} onStateChange={onStateChange}/>}\n      <TestScreen active={active} num={num}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAO,WAAW,CAClB,OAAQC,OAAO,KAAO,oBAAoB,CAE1C,OAAQC,UAAU,KAAO,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,KAAM,CAAAC,KAAK,CAAG,CAAC,cAAc,CAAE,cAAc,CAAE,cAAc,CAAE,cAAc,CAAC,CAE9E,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACW,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACa,GAAG,CAAC,CAAGb,QAAQ,CAACc,IAAI,CAACC,KAAK,CAACR,KAAK,CAACS,MAAM,CAAGF,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC,CAChE,KAAM,CAAAC,KAAK,CAAGX,KAAK,CAACM,GAAG,CAAC,CAExB,KAAM,CAAAM,aAAa,CAAIC,KAAwB,EAAK,CAClD,GAAI,CAAAC,WAAW,CAAG,mBAAmB,CACrC,OAAQD,KAAK,EACX,IAAK,EAAC,CAAE,CACNC,WAAW,CAAG,uCAAuC,CACrD,MACF,CACA,IAAK,EAAC,CAAE,CACNA,WAAW,CAAG,kCAAkC,CAChD,MACF,CACA,IAAK,EAAC,CAAE,CACNA,WAAW,CAAG,0DAA0D,CACxE,MACF,CACA,IAAK,EAAC,CAAE,CACNA,WAAW,CAAG,iBAAiB,CAC/B,MACF,CACA,IAAK,EAAC,CAAE,CACNA,WAAW,CAAG,kDAAkD,CAChET,SAAS,CAAC,IAAI,CAAC,CACf,MACF,CACA,IAAK,EAAC,CAAE,CACNS,WAAW,CAAG,gDAAgD,CAC9DX,UAAU,CAAC,KAAK,CAAC,CACjB,MACF,CACF,CACAY,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC,CAC1B,CAAC,CAED,mBACEf,KAAA,QAAKkB,SAAS,CAAC,KAAK,CAAAC,QAAA,EACjBhB,OAAO,eAAIL,IAAA,CAACH,OAAO,EAACiB,KAAK,CAAEA,KAAM,CAACC,aAAa,CAAEA,aAAc,CAAC,CAAC,cAClEf,IAAA,CAACF,UAAU,EAACS,MAAM,CAAEA,MAAO,CAACE,GAAG,CAAEA,GAAI,CAAC,CAAC,EACpC,CAAC,CAEV,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}