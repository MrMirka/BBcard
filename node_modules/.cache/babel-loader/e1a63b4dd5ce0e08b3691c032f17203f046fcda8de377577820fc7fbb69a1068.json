{"ast":null,"code":"/* eslint-disable */import'./CardBox.css';import React,{useEffect,useState}from'react';import{CardBoxInstance}from'./instance/CardBoxInstance';/**\n * cover\n * изображение должно быть растровое,\n * размер 204x304 без закруглений углов\n * желательно в размере x2(для ретины)\n *\n * onStateChange\n * тут все понятно, в App.tsx описаны все состояния\n * нулевое, конечно, не стриггерит никогда\n */import{jsx as _jsx}from\"react/jsx-runtime\";export const CardBox=_ref=>{let{cover,onStateChange}=_ref;const[canvas,setCanvas]=useState(null);const[instance,setInstance]=useState();useEffect(()=>{if(!canvas)return;if(!cover)throw new Error('Пацантре, ссыль на обложку карточки должна быть сразу');const inst=new CardBoxInstance(canvas,cover);setInstance(inst);return()=>{inst.destroy();};},[canvas]);useEffect(()=>{if(instance)instance.onStateChange=onStateChange;},[instance,onStateChange]);return/*#__PURE__*/_jsx(\"div\",{className:\"card-box\",ref:setCanvas});};","map":{"version":3,"names":["React","useEffect","useState","CardBoxInstance","jsx","_jsx","CardBox","_ref","cover","onStateChange","canvas","setCanvas","instance","setInstance","Error","inst","destroy","className","ref"],"sources":["/Users/fredgan/Documents/Projects/BetBoom/BBCard/src/CardBox/CardBox.tsx"],"sourcesContent":["/* eslint-disable */\nimport './CardBox.css';\nimport React, {useEffect, useState} from 'react';\nimport {EventHandler, CardBoxInstance} from './instance/CardBoxInstance';\n\n\n/**\n * cover\n * изображение должно быть растровое,\n * размер 204x304 без закруглений углов\n * желательно в размере x2(для ретины)\n *\n * onStateChange\n * тут все понятно, в App.tsx описаны все состояния\n * нулевое, конечно, не стриггерит никогда\n */\nexport type Props = {\n  cover?: string;\n  onStateChange?: EventHandler;\n}\n\n\nexport const CardBox = ({cover, onStateChange}: Props) => {\n  const [canvas, setCanvas] = useState<HTMLDivElement | null>(null);\n  const [instance, setInstance] = useState<CardBoxInstance>();\n\n  useEffect(() => {\n    if (!canvas) return;\n    if (!cover) throw new Error('Пацантре, ссыль на обложку карточки должна быть сразу');\n    const inst = new CardBoxInstance(canvas, cover);\n    setInstance(inst);\n\n    return () => {\n      inst.destroy();\n    }\n  }, [canvas]);\n\n  useEffect(() => {\n    if (instance) instance.onStateChange = onStateChange;\n  }, [instance, onStateChange]);\n\n  return <div className='card-box' ref={setCanvas}/>\n}"],"mappings":"AAAA,oBACA,MAAO,eAAe,CACtB,MAAO,CAAAA,KAAK,EAAGC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAChD,OAAsBC,eAAe,KAAO,4BAA4B,CAGxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATA,OAAAC,GAAA,IAAAC,IAAA,yBAgBA,MAAO,MAAM,CAAAC,OAAO,CAAGC,IAAA,EAAmC,IAAlC,CAACC,KAAK,CAAEC,aAAoB,CAAC,CAAAF,IAAA,CACnD,KAAM,CAACG,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAwB,IAAI,CAAC,CACjE,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAkB,CAAC,CAE3DD,SAAS,CAAC,IAAM,CACd,GAAI,CAACS,MAAM,CAAE,OACb,GAAI,CAACF,KAAK,CAAE,KAAM,IAAI,CAAAM,KAAK,CAAC,uDAAuD,CAAC,CACpF,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAZ,eAAe,CAACO,MAAM,CAAEF,KAAK,CAAC,CAC/CK,WAAW,CAACE,IAAI,CAAC,CAEjB,MAAO,IAAM,CACXA,IAAI,CAACC,OAAO,CAAC,CAAC,CAChB,CAAC,CACH,CAAC,CAAE,CAACN,MAAM,CAAC,CAAC,CAEZT,SAAS,CAAC,IAAM,CACd,GAAIW,QAAQ,CAAEA,QAAQ,CAACH,aAAa,CAAGA,aAAa,CACtD,CAAC,CAAE,CAACG,QAAQ,CAAEH,aAAa,CAAC,CAAC,CAE7B,mBAAOJ,IAAA,QAAKY,SAAS,CAAC,UAAU,CAACC,GAAG,CAAEP,SAAU,CAAC,CAAC,CACpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}