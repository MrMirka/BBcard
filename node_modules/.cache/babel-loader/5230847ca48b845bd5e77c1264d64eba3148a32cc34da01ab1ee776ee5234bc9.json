{"ast":null,"code":"/* eslint-disable */import{RoundedCubeGeometry,RoundedPlaneGeometry}from'../Rounded';import{BackSide,Group,Mesh,MeshBasicMaterial,MeshPhongMaterial}from'three';const getRoundedPlane=(width,height,radius,z,material)=>{const plane=new RoundedPlaneGeometry(width/height,1,radius/height);if(material.map){material.map.repeat.set(height/width,1);material.map.offset.x=-(height/width-1)/2;}const mesh=new Mesh(plane,material);mesh.position.set(-height/2,-height/2+35,z);mesh.scale.setScalar(height);return mesh;};export const getCard=(backMap,frontMap)=>{const w=212;const h=280;const r=12;const d=5;const b=4;const geometry=new RoundedCubeGeometry(w,h,d,r,0,4);const material=new MeshPhongMaterial({//color: '#FF4560'\ncolor:'#DADCDB'});const mesh=new Mesh(geometry,material);mesh.position.y=35;const backMaterial=new MeshPhongMaterial({map:backMap,side:BackSide});const backMesh=getRoundedPlane(w,h,r,-(d/2+0.1),backMaterial);const frontMaterial=new MeshBasicMaterial({color:'#FFF',map:frontMap});const frontMesh=getRoundedPlane(w-b*2,h-b*2,r-b/2,d/2+0.1,frontMaterial);const animation=new Group();const rotation=new Group();rotation.scale.setScalar(0.00135);rotation.position.z=0.005;rotation.add(mesh,backMesh,frontMesh);animation.add(rotation);animation.rotation.y=Math.PI;return{geometry,material,mesh,backMaterial,backMesh,frontMaterial,frontMesh,animation,rotation};};","map":{"version":3,"names":["RoundedCubeGeometry","RoundedPlaneGeometry","BackSide","Group","Mesh","MeshBasicMaterial","MeshPhongMaterial","getRoundedPlane","width","height","radius","z","material","plane","map","repeat","set","offset","x","mesh","position","scale","setScalar","getCard","backMap","frontMap","w","h","r","d","b","geometry","color","y","backMaterial","side","backMesh","frontMaterial","frontMesh","animation","rotation","add","Math","PI"],"sources":["/Users/fredgan/Documents/Projects/BetBoom/BBCard/src/CardBox/instance/card/card.ts"],"sourcesContent":["/* eslint-disable */\nimport {RoundedCubeGeometry, RoundedPlaneGeometry} from '../Rounded';\nimport {BackSide, Group, Mesh, MeshBasicMaterial, MeshPhongMaterial, Texture} from 'three';\n\n\nconst getRoundedPlane = (width: number, height: number, radius: number, z: number, material: MeshPhongMaterial | MeshBasicMaterial) => {\n  const plane = new RoundedPlaneGeometry(width / height, 1, radius / height);\n  if (material.map) {\n    material.map.repeat.set(height / width, 1);\n    material.map.offset.x = -(height / width - 1) / 2;\n  }\n  const mesh = new Mesh(plane, material);\n  mesh.position.set(-height / 2, -height / 2 + 35, z);\n  mesh.scale.setScalar(height);\n\n  return mesh;\n}\n\nexport const getCard = (backMap: Texture, frontMap: Texture) => {\n  const w = 212;\n  const h = 280;\n  const r = 12;\n  const d = 5;\n  const b = 4;\n\n  const geometry = new RoundedCubeGeometry(w, h, d, r, 0, 4);\n  const material = new MeshPhongMaterial({\n    //color: '#FF4560'\n    color: '#DADCDB'\n  });\n  const mesh = new Mesh(geometry, material);\n  mesh.position.y = 35\n\n  const backMaterial = new MeshPhongMaterial({\n    map: backMap,\n    side: BackSide\n  });\n  const backMesh = getRoundedPlane(\n    w,\n    h,\n    r,\n    -(d / 2 + 0.1),\n    backMaterial\n  );\n\n  const frontMaterial = new MeshBasicMaterial({\n    color: '#FFF',\n    map: frontMap\n  });\n  const frontMesh = getRoundedPlane(\n    w - b * 2,\n    h - b * 2,\n    r - b / 2,\n    d / 2 + 0.1,\n    frontMaterial\n  );\n\n  const animation = new Group();\n  const rotation = new Group();\n\n  rotation.scale.setScalar(0.00135);\n  rotation.position.z = 0.005;\n  rotation.add(mesh, backMesh, frontMesh);\n  animation.add(rotation);\n  animation.rotation.y = Math.PI;\n\n  return {\n    geometry,\n    material,\n    mesh,\n    backMaterial,\n    backMesh,\n    frontMaterial,\n    frontMesh,\n    animation,\n    rotation\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}